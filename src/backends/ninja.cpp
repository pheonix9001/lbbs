#include "ninja.h"

#include <iostream>
#include <unistd.h>
#include <fcntl.h>
#include <algorithm>

//
// NinjaRule functions
//
NinjaRule::NinjaRule(Ninja* _backend, std::string _name) {
	this->name = _name;
	this->backend = _backend;
}

void NinjaRule::generate(std::string out, std::vector<std::string> in) {
	auto& fs = this->backend->fs;

	fs << "build " << out << ": " << this->name;
	for(auto& i: in) {
		fs << " " << i ;
	}
}

//
// Ninja functions
//

Ninja::Ninja(const char* file) : fs(file){
	this->fs
	<< "#\n"
	<< "# Generated by meson-lua\n"
	<< "# DO NOT EDIT MANUALLY\n"
	<< "#\n";
}

Rule* Ninja::create_rule(std::string name, std::map<std::string, std::string> extra_props) {
	std::cerr << "-- Generating rule for " << name << std::endl;

	this->fs << "rule " << name << "\n";
	for (auto& kv: extra_props) {
		this->fs << " " << kv.first << " = " << kv.second << "\n";
	}
	fs << "\n";

	NinjaRule* ret = new NinjaRule{this, name};

	return (Rule*)ret;
}
